Q1) Write a program to display the Employee(Empid, Empname, Empdesignation, Empsal)
information using toString().

import java.util.*;
class Emp 
{ 
     int id,salary; 
     String name; 
     String desig; 
     Emp(int id, String name, int salary ,String desig) 
     { 
         this.id=id; 
         this.name=name; 
         this.salary=salary; 
         this.desig=desig; 
     } 
     public String toString() // overrides toString() method 
     { 
         return id+" "+name+" "+salary+" "+desig; 
     } 
     public static void main(String args[]) 
     { 
         Emp E1=new Emp(111,"Rakesh",50000,"bsc cs"); 
         Emp E2=new Emp(112,"Suresh",25000,"msc cs"); 
         System.out.println("Employee details: "+E1); 
         System.out.println("Employee details: "+E2); 
     }
}


Q2) Create an abstract class "order" having members id, description. Create two subclasses
"Purchase Order" and "Sales Order" having members customer name and Vendor name
respectively. Definemethods accept and display in all cases. Create 3 objects each of Purchas
Order and Sales Order and accept and display details.


import java.util.Scanner;
abstract class Order 
{
    protected int id;
    protected String description;
    public Order(int id, String description) {
    this.id = id;
    this.description = description;
    }
    public abstract void displayDetails();
}
class PurchaseOrder extends Order 
{
    private String customerName;
    public PurchaseOrder(int id, String description) {
    super(id, description);
    }
    @Override
    public void acceptDetails() 
    {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter Customer Name for Purchase Order (ID: " +
        id + "): ");
        customerName = scanner.nextLine();
    }
    @Override
    public void displayDetails() 
    {
        System.out.println("Purchase Order ID: " + id);
        System.out.println("Description: " + description);
        System.out.println("Customer Name: " + customerName);
        System.out.println();
    }
}

class SalesOrder extends Order 
{
    private String vendorName;
    public SalesOrder(int id, String description) 
    {
        super(id, description);
    }
    @Override
    public void acceptDetails() 
    {
        Scanner scanner = new Scanner(System.in);System.out.print("Enter Vendor Name for Sales Order (ID: " + id +"): ");
        vendorName = scanner.nextLine();
    }
    @Override
    public void displayDetails() 
    {
        System.out.println("Sales Order ID: " + id);
        System.out.println("Description: " + description);
        System.out.println("Vendor Name: " + vendorName);
        System.out.println();
    }
}
public class OrderTest 
{
    public static void main(String[] args) 
    {
            PurchaseOrder[] purchaseOrders = new PurchaseOrder[3];
            SalesOrder[] salesOrders = new SalesOrder[3];
            for (int i = 0; i < 3; i++) {
            purchaseOrders[i] = new PurchaseOrder(i + 1, "Purchase Order
            #" + (i + 1));
            purchaseOrders[i].acceptDetails();
            }
            for (int i = 0; i < 3; i++) {
            salesOrders[i] = new SalesOrder(i + 1, "Sales Order #" + (i +
            1));
            salesOrders[i].acceptDetails();
            }
            System.out.println("\nPurchase Orders Details:");
            for (PurchaseOrder po : purchaseOrders) {
            po.displayDetails();
            System.out.println("Sales Orders Details:");
            for (SalesOrder so : salesOrders) {
            so.displayDetails();
        }
    }
}
